a<-"hello world!"
a
q()
library(quantmod)
SSEC_INDEX<-getSymbols("^SSEC",from = "2010-01-05",to ='2015-03-01',src="yahoo") #Shanghai
SSEC_INDEX<-getSymbols("^SSEC",from = "2010-01-05",to ='2015-03-01',src="yahoo") #Shanghai
SSEC_INDEX<-getSymbols("^SSEC",from = "2010-01-05",to ='2015-03-01',src="yahoo") #Shanghai
? chartSeries
chartSeries(SSEC)
HSI_INDEX<-getSymbols("^HSI",from='2010-01-05',to='2015-03-01',src='yahoo')  #HONGKONG
STI_INDEX<-getSymbols("^STI",from='2010-01-05',to='2015-03-01',src='yahoo')  #Singapo
chartSeries(HSI)
chartSeries(STI)
HSI_INDEX<-getSymbols("^HSI",from='2010-01-05',to='2015-03-01',src='yahoo')  #HONGKONG
HSI_INDEX<-getSymbols("^HSI",from='2010-01-05',to='2015-03-01',src='yahoo')  #HONGKONG
chartSeries(HSI)
TYO_INDEX<-getSymbols("^N225",from='2010-01-05',to='2015-03-01',src='yahoo') #Japan
chartSeries(TYO)
chartSeries(N225)
GSPC_INDEX<-getSymbols("^GSPC",from="2010-01-05", to='2015-03-01',src="yahoo") #US
DJIA_INDEX<-getSymbols("^DJI",from="2010-01-05", to='2015-03-01',src="yahoo") #US
? mse
?? MSE
?? mean square error
?? mean square
? rmse
? rmse
?? rmse
install.packages("hydroGOF")
sim<-c(0.0002,0.0000,0.0133,0.1384,0.1609,0.0000,0.0074,0.1723,0.0000,0.1214,0.0654,0.0000,0.0249,0.1594,0.0000,0.1282,0.0053,0.0000,0.0000,0.0000)
library("hydroGOF", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
? rmse
a<-c(0.0002,0.0000,0.0133,0.1384,0.1609,0.0000,0.0074,0.1723,0.0000,0.1214,0.0654,0.0000,0.0249,0.1594,0.0000,0.1282,0.0053,0.0000,0.0000,0.0000)
b<-c(0.0002,0.0000,0.0138,0.1385,0.1610,0.0000,0.0075,0.1722,0.0000,0.1213,0.0655,0.0000,0.0250,0.1595,0.0000,0.1282,0.0054,0.0000,0.0000,0.0000)
rmse(a,b)
rmse(a,b)^2
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
)
#根据交通工具，找到出行时间
time <- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(1, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(5,mode_of_transport)
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time <- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(1, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time <- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(1, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(5,mode_of_transport)
replicate(5,mode_of_transport)
replicate(5,mode_of_transport)
replicate(5,mode_of_transport)
replicate(5,mode_of_transport)
replicate(4,mode_of_transport)
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time <- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(1, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(4,mode_of_transport)
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time <- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(2, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(4,mode_of_transport)
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time <- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(2, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(4,mode_of_transport)
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time<- switch(
made_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(1, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(5,time_for_commute)
replicate(5,time_for_commute())
time_for_commute <- function(){
#选择当时所用的交通工具
mode_of_transport <- sample(
c("car","bus","train","bike"),
size = 1,
prob = c(0.1,0.2,0.3,0.4))
#根据交通工具，找到出行时间
time<- switch(
mode_of_transport,
car = rlnorm(1, log(30), 0.5),
bus = rlnorm(1, log(40), 0.5),
train = rnorm(1, 30, 10),
bike = rnorm(1, 60, 5)
)
names(time) <- mode_of_transport
time
}
replicate(5,time_for_commute())
replicate(5,time_for_commute())
replicate(5,time_for_commute())
data.frame(
x=letters[1:5],
y=rnorm(5),
z=runif(5) > 0.5,
row.names=c("Jackie","Tito","Jermaine","Marlon","Michael")
)
## and also we can overridden by passing the argument row.names = NULL
data.frame(
x=letters[1:5],
y=rnorm(5),
z=runif(5) > 0.5,
row.names=NULL
)
? lapply
complemented <- c(2,3,6,18)
rep4x <- function(x) rep.int(4,times=x)
lapply(complemented,rep4x)
(frogger_scores<-data.frame(
players = rep(c("Tom","Dick","Harry")),
times = c(2,5,3),
score = round(rlnorm(10,8),-1)
))
(frogger_scores<-data.frame(
players = rep(c("Tom","Dick","Harry"),times = c(2,5,3)),
score = round(rlnorm(10,8),-1)
))
(scores_by_players <- with(
frogger_scores,
split(score,players)
))
list_of_means_by_players <- lapply(scores_by_players,mean)
list_of_means_by_players
mean_by_players <- unlist(list_of_means_by_players)
mean_by_players
with(froggers_scores, tapply(socres, players, mean))
with(frogger_scores, tapply(socres, players, mean))
with(frogger_scores, tapply(scores, players, mean))
with(frogger_scores, tapply(score, players, mean))
? apply
? matrix
z <- matrix(1:6,nrow=3,ncol=2)
z
? lapply
？by
? by
? with
devtools::install_github('dmlc/xgboost',subdir='R-package')
library(xgboost)
setwd("/Users/luke/Documents/NYU-UCSL-2015//R Challenge2/")
cleandata <- read.csv("Citi+Bike+Clean+Data.csv",header=TRUE)
cleandata$tripduration<- cleandata$tripduration /60
subsetdata2<-subset(cleandata$tripduration,cleandata$tripduration=45)
subsetdata2<-subset(cleandata$tripduration,cleandata$tripduration>=45)
hist(subsetdata2)
quantile(subsetdata2)
binom.test(sum(subsetdata2<120),length(subsetdata2),0.5)
subsetdata3<-subset(cleandata,cleandata$tripduration>=45)
summary(aov(cleandata$tripduration ~ cleandata$gender))
attach(subsetdata3)
table(gender)
View(subsetdata3)
ggplot(subsetdata3,aes(x=factor(gender),y=tripduration)) + geom_boxplot(outlier.size=0.1,outlier.shape=0) +ggtitle("Boxplot for CitiBike")
library(ggplot2)
ggplot(subsetdata3,aes(x=factor(gender),y=tripduration)) + geom_boxplot(outlier.size=0.1,outlier.shape=0) +ggtitle("Boxplot for CitiBike")
ggplot(subsetdata3,aes(x=factor(gender),y=tripduration)) + geom_boxplot(outlier.size=0.5,outlier.shape=0) +ggtitle("Boxplot for CitiBike")
t.test(subsetdata2-120)
